{
    "Service": {
        "Ports": {
            "Metrics": 5030,
            "Health": 5040
        },
        "CoreMessagingApi": {
            "BaseAddress": ""
        },
        "MyAccountApi": {
            "BaseAddress": ""
        },
        "BackOffice": {
            "BaseAddress": ""
        },
        "Kafka": {
            "BootstrapServers": [
                "PLAINTEXT://localhost:19092"
            ],
            "SchemaRegistryUrls": [
                "http://localhost:8081"
            ],
            "Consumer": {
                "GroupId": "consumer-my-account-transactionmonitoring-decision-2HourGamingWagering-created-v1",
                "Topic": "tmdecision_2hourgamingwagering_set"
            },
            "Producer": {
                "Topics": {
                    "Slack": "slack.kafka.message"
                }
            }
        },
        "Slack": {
            "ChannelName": ""
        },
        "MessageSettings": {
            "Type": "MarkersOfHarm",
            "Title": "You have been playing for 2 hours - all ok?",
            "Texts": [
                "If you’re still enjoying it you can keep playing, but just so you know, we’ll pause your account at 3 hours for a short break.",
                "Tap ‘Keep Playing’ to continue or ‘Stop Playing’ to take a break now:"
            ],
            "Buttons": [
                {
                    "DisplayText": "Keep Playing",
                    "Action": "KEEP_PLAYING",
                    "Tag": "play"
                },
                {
                    "DisplayText": "Stop Playing",
                    "Action": "STOP_PLAYING",
                    "Tag": "stop"
                }
            ]
        }
    },
    "Serilog": {
        "Using": [
            "Serilog.Sinks.Console",
            "Serilog.Expressions"
        ],
        "MinimumLevel": {
            "Default": "Debug",
            "Override": {
                "Microsoft": "Error",
                "System": "Error"
            }
        },
        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    "formatter": "Serilog.Formatting.Compact.RenderedCompactJsonFormatter, Serilog.Formatting.Compact"
                }
            }
        ],
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithThreadId",
            "Demystify",
            "CorrelationId",
            "AspNetCore"
        ],
        "Destructure": [
            {
                "Name": "ToMaximumDepth",
                "Args": {
                    "maximumDestructuringDepth": 4
                }
            },
            {
                "Name": "ToMaximumStringLength",
                "Args": {
                    "maximumStringLength": 100
                }
            },
            {
                "Name": "ToMaximumCollectionCount",
                "Args": {
                    "maximumCollectionCount": 10
                }
            }
        ],
        "Filter": [
            {
                "Name": "ByExcluding",
                "Args": {
                    "expression": "RequestPath like '/healthz%' and StatusCode=200"
                }
            }
        ]
    }
}
